/*
  HINT: is interpreted -/+

  primop pure
    - "plusAddr#"              :: T_Addr -> T_Int64 -> T_Addr
    - "minusAddr#"             :: T_Addr -> T_Addr -> T_Int64
    - "remAddr#"               :: T_Addr -> T_Int64 -> T_Int64
    - "addr2Int#"              :: T_Addr -> T_Int64
    - "int2Addr#"              :: T_Int64 -> T_Addr
    - "gtAddr#"                :: T_Addr -> T_Addr -> T_Int64
    - "geAddr#"                :: T_Addr -> T_Addr -> T_Int64
    - "eqAddr#"                :: T_Addr -> T_Addr -> T_Int64
    - "neAddr#"                :: T_Addr -> T_Addr -> T_Int64
    - "ltAddr#"                :: T_Addr -> T_Addr -> T_Int64
    - "leAddr#"                :: T_Addr -> T_Addr -> T_Int64
    - "indexCharOffAddr#"      :: T_Addr -> T_Int64 -> T_Char
    - "indexWideCharOffAddr#"  :: T_Addr -> T_Int64 -> T_Char
    - "indexIntOffAddr#"       :: T_Addr -> T_Int64 -> T_Int64
    - "indexWordOffAddr#"      :: T_Addr -> T_Int64 -> T_Word64
    - "indexAddrOffAddr#"      :: T_Addr -> T_Int64 -> T_Addr
    - "indexFloatOffAddr#"     :: T_Addr -> T_Int64 -> T_Float
    - "indexDoubleOffAddr#"    :: T_Addr -> T_Int64 -> T_Double
    - "indexStablePtrOffAddr#" :: T_Addr -> T_Int64 -> {"StablePtr#" %a}
    - "indexInt8OffAddr#"      :: T_Addr -> T_Int64 -> T_Int64
    - "indexInt16OffAddr#"     :: T_Addr -> T_Int64 -> T_Int64
    - "indexInt32OffAddr#"     :: T_Addr -> T_Int64 -> T_Int64
    - "indexInt64OffAddr#"     :: T_Addr -> T_Int64 -> T_Int64
    - "indexWord8OffAddr#"     :: T_Addr -> T_Int64 -> T_Word64
    - "indexWord16OffAddr#"    :: T_Addr -> T_Int64 -> T_Word64
    - "indexWord32OffAddr#"    :: T_Addr -> T_Int64 -> T_Word64
    - "indexWord64OffAddr#"    :: T_Addr -> T_Int64 -> T_Word64

  primop effectful
    - "readCharOffAddr#"       :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Char}
    - "readWideCharOffAddr#"   :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Char}
    - "readIntOffAddr#"        :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Int64}
    - "readWordOffAddr#"       :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Word64}
    - "readAddrOffAddr#"       :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Addr}
    - "readFloatOffAddr#"      :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Float}
    - "readDoubleOffAddr#"     :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Double}
    - "readStablePtrOffAddr#"  :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" {"StablePtr#" %a}}
    - "readInt8OffAddr#"       :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Int64}
    - "readInt16OffAddr#"      :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Int64}
    - "readInt32OffAddr#"      :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Int64}
    - "readInt64OffAddr#"      :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Int64}
    - "readWord8OffAddr#"      :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Word64}
    - "readWord16OffAddr#"     :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Word64}
    - "readWord32OffAddr#"     :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Word64}
    - "readWord64OffAddr#"     :: T_Addr -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.Unit#" T_Word64}
    - "writeCharOffAddr#"      :: T_Addr -> T_Int64 -> T_Char -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeWideCharOffAddr#"  :: T_Addr -> T_Int64 -> T_Char -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeIntOffAddr#"       :: T_Addr -> T_Int64 -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeWordOffAddr#"      :: T_Addr -> T_Int64 -> T_Word64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeAddrOffAddr#"      :: T_Addr -> T_Int64 -> T_Addr -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeFloatOffAddr#"     :: T_Addr -> T_Int64 -> T_Float -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeDoubleOffAddr#"    :: T_Addr -> T_Int64 -> T_Double -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeStablePtrOffAddr#" :: T_Addr -> T_Int64 -> {"StablePtr#" %a} -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeInt8OffAddr#"      :: T_Addr -> T_Int64 -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeInt16OffAddr#"     :: T_Addr -> T_Int64 -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeInt32OffAddr#"     :: T_Addr -> T_Int64 -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeInt64OffAddr#"     :: T_Addr -> T_Int64 -> T_Int64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeWord8OffAddr#"     :: T_Addr -> T_Int64 -> T_Word64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeWord16OffAddr#"    :: T_Addr -> T_Int64 -> T_Word64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeWord32OffAddr#"    :: T_Addr -> T_Int64 -> T_Word64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
    - "writeWord64OffAddr#"    :: T_Addr -> T_Int64 -> T_Word64 -> {"State#" %s} -> {"ghc-prim_GHC.Prim.(##)"}
*/

/*
  NOTE: StablePtr is a global container.
        Addr operations can not return unlifted values, thust they are not interpreted.
*/
